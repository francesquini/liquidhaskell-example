1:1-1:1::Main.$trModule :: "GHC.Types.Module"
5:1-5:4::Main.bar :: "{n : GHC.Types.Int | n > 10} -> [GHC.Types.Char]"
5:5-5:6::n :: "{n : GHC.Types.Int | n > 10}"
5:9-5:15::lq_anf$##7205759403792803749 :: "[GHC.Types.Char]"
5:14-5:15::n :: "{v : GHC.Types.Int | v > 10\n                     && v == n}"
5:19-5:40::lq_anf$##7205759403792803751 :: "[GHC.Types.Char]"
8:1-8:4::Main.foo :: "(GHC.Types.IO ())"
8:10-8:11::x :: "GHC.Types.Int"
8:15-8:19::lq_anf$##7205759403792803752 :: "[GHC.Types.Char] -> GHC.Types.Int"
8:24-8:31::System.IO.getLine :: "{v : (GHC.Types.IO [GHC.Types.Char]) | v == getLine}"
9:10-9:18::System.IO.putStrLn :: "[GHC.Types.Char] -> (GHC.Types.IO ())"
9:21-9:54::lq_anf$##7205759403792803758 :: "[GHC.Types.Char]"
9:24-9:25::x :: "{v : GHC.Types.Int | v == x}"
9:28-9:30::lq_anf$##7205759403792803754 :: "GHC.Types.Int"
9:36-9:41::Main.bar :: "{v : GHC.Types.Int | v > 10} -> [GHC.Types.Char]"
9:40-9:41::x :: "{v : GHC.Types.Int | v == x}"
9:47-9:54::lq_anf$##7205759403792803757 :: "{v : GHC.Prim.Addr# | v == \"erro!\"}"
12:1-12:5::Main.main :: "(GHC.Types.IO ())"